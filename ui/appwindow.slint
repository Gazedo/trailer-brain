import { Button, VerticalBox  , HorizontalBox, GridBox} from "std-widgets.slint";

component LightButton inherits Button {
    in-out property <bool> light;
    checked: light;
    clicked => {
        light = !light
    }
    
}
component FuelGauge inherits Rectangle {
    in property <float> value: 0.832423423;
    in property <color> colgauge: yellow;
    border-radius: 5px;
    background: #000000ab;
    Rectangle {
        height: root.height*(1-root.value);
        y:root.y;
        background: root.background;
        border-color: self.background.darker(20%);
    }
    Rectangle {
        height: root.height * root.value;
        y: (root.height * (1-root.value));
        background: root.colgauge;
        border-color: self.background.darker(20%);
    }
    Text {
        in property <int> clean_val: value * 100;
        text: "\{self.clean_val}%";
        color: red;
    }
}
component Orientation{
    in property <angle> angle: 10deg;
    in property <image> source: @image-url("./images/trailer-rear.svg");
    Rectangle {
        background: root.angle < 2.5deg?#34784b: #913942;
        width: 100%;
        height: 100%;
    }
    Path {
        width: 100%;
        height: 100%;
        stroke: #c5d2de;
        stroke-width: 1px;
        MoveTo{
            x:0;
            y:0.5/1px * root.height;
        }
        LineTo{
            x:root.width/1px;
            y:0.5/1px * root.height;
        }

    }
    Image{
        source: root.source;
        // rotation-angle: root.angle;
        width: 30%;
    }
}
export component AppWindow inherits Window {
    width: 480px;
    height: 320px;
    in-out property<float> battery-percentage: 0.42;
    in-out property<float> battery-temperature: 25;
    in-out property<float> battery-amp: 42;
    in-out property<float> water-percentage: 0.82;
    in-out property<bool> output-pump;
    in-out property<bool> output-fridge;
    in-out property <bool> output-kitchen;
    in-out property <bool> output-rear;
    in-out property <bool> output-awning;
    in-out property <angle> imu-roll:10deg;
    in-out property <angle> imu-pitch:1deg;
    callback send-light-message();
    GridBox {
        spacing: 2px;
        Row {
            FuelGauge {
                colspan: 2;
                value <=> battery-percentage;
            }
            FuelGauge {
                col:2;
                colspan: 2;
                value <=> water-percentage;
                colgauge: blue;
            }
        }
        Row {
            LightButton {
                text: "Kitchen Light";
                light <=> root.output-kitchen;
            }
            LightButton {
                text: "Rear Light";
                light <=> root.output-rear;
            }
            LightButton {
                text: "Water Pump";
                light <=> root.output-pump;
            }
            LightButton {
                text: "Fridge";
                light <=> root.output-fridge;
            }
        }
        Row{
            Orientation {
                colspan: 2;
                angle<=> imu-roll;
            }
            Orientation {
                col:2;
                colspan: 2;
                angle<=> imu-pitch;
                source: @image-url("./images/trailer-side.svg");
            }
        }
     }
}
